defaults: &defaults
  docker:
    - image: opuscapita/minsk-core-ci:grails-2.4.4-jdk-8u192-nodejs-8.17.0-maven-3.3.9
  working_directory: ~/build
version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - run:
          name: Environment inject.
          command: env_inject.sh
      - checkout
      - restore_cache:
          keys:
            - styles-{{ .Branch }}-{{ checksum "package.json" }}
            - styles-{{ .Branch }}
            - styles
      - run:
          name: "Installing dependencies."
          command: yarn install
      - save_cache:
          key: styles-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
              - ./node_modules
              - ./yarn.lock
      - run:
          name: "Running lint."
          command: npm start lint
      - run:
          name: Deploy snapshot.
          command: npm start grails-plugin-deploy-snapshot
  update-gh-pages:
    <<: *defaults
    steps:
      - run:
          name: Environment inject
          command: /bin/env_inject.sh
      - checkout
      - restore_cache:
          keys:
            - styles-{{ .Branch }}-{{ checksum "package.json" }}
            - styles-{{ .Branch }}
            - styles
      - run:
          name: "Installing dependencies."
          command: yarn install
      - save_cache:
          key: styles-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
              - ./node_modules
              - ./yarn.lock
      - run:
          name: build-gh-pages
          command: ./scripts/gh-pages/build.sh
      - run:
          name: deploy-gh-pages
          command: ./scripts/gh-pages/deploy.sh .gh-pages-tmp
  build_release:
    <<: *defaults
    steps:
      - run:
          name: Environment inject
          command: /bin/env_inject.sh
      - checkout
      - restore_cache:
          keys:
            - 'v1-styles-{{ .Branch }}-{{ checksum "package.json" }}'
            - 'v1-styles-{{ .Branch }}'
            - v1-styles
      - run:
          name: Installing dependencies.
          command: yarn install
      - save_cache:
          key: 'v1-styles-{{ .Branch }}-{{ checksum "package.json" }}'
          paths:
            - ./node_modules
            - ./yarn.lock
            - ~/.m2/repository
      - run:
          name: Running lint.
          command: npm start lint
      - run:
          name: Deploy.
          command: npm start publish-release
      
  release:
    <<: *defaults
    steps:
      - run:
          name: Environment inject
          command: env_inject.sh
      - checkout
      - run:
          name: Executing release scrtipt.
          command: .circleci/release.sh
      
workflows:
  version: 2
  release-and-build:
    jobs:
      - release:
          filters:
            branches:
              only: release
      - build:
          filters:
            branches:
              ignore:
                - gh-pages
                - release
      - update-gh-pages:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - build_release:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/